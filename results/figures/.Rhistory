air_temperature + precipitation + (1 | season),
data = region2_combined, control = lmerControl(optimizer = "bobyqa"))
glm_simple <- lmer(low_freq_hz + high_freq_hz + cad + delta_time_s + peak_freq_hz ~
pca_scores + precipitation + (1 | season),
data = region2_combined, control = lmerControl(optimizer = "bobyqa"))
glm_completo <- lmer(low_freq_hz + high_freq_hz + cad + delta_time_s + peak_freq_hz ~
pca_scores+ precipitation + elevation + (1 | season),
data = region2_combined, control = lmerControl(optimizer = "bobyqa") )
# Comparar los modelos
anova(glm_simple, glm_completo)
glm_simple <- lmer(low_freq_hz + high_freq_hz + cad + delta_time_s + peak_freq_hz ~
pca_scores + precipitation + (1 | season),
data = region2_combined, control = lmerControl(optimizer = "bobyqa"))
glm_completo <- lmer(low_freq_hz + high_freq_hz + cad + delta_time_s + peak_freq_hz ~
pca_scores+ precipitation + elevation + (1 | season),
data = region2_combined, control = lmerControl(optimizer = "bobyqa") )
# Comparar los modelos
anova(glm_simple, glm_completo)
tab<-datasummary_skim(region2_selected,
type = "numeric",
by = 'season',
fun_numeric = list(
Unique = NUnique,
Mean = Mean,
SD = SD,
Min = Min,
Max = Max,
Histogram = function(x) NULL
),
output = "gt"
)
tab<-datasummary_skim(region2_selected,
type = "numeric",
by = 'season',
fun_numeric = list(
Unique = NUnique,
Mean = Mean,
SD = SD,
Min = Min,
Max = Max,
Histogram = function(x) NULL
),
output = "gt"
)
tab %>%
# column labels
tab_spanner(label = 'Region 1', columns = 1:4) %>%
tab_spanner(label = 'Region 2', columns = 5:8) %>%
# footnote
tab_footnote(locations = cells_body(rows = 3, columns = 1)) %>%
modelplot(models, coef_omit = 'Interc') + facet_grid(~model)
tab %>%
# column labels
tab_spanner(label = 'Region 1', columns = 1:4) %>%
tab_spanner(label = 'Region 2', columns = 5:8) %>%
# footnote
tab_footnote(locations = cells_body(rows = 3, columns = 1))
tab %>%
# column labels
tab_spanner(label = 'Region 1', columns = 1:4) %>%
tab_spanner(label = 'Region 2', columns = 5:8) %>%
modelplot(models, coef_omit = 'Interc') + facet_grid(~model)
tab
library(gt)
tab<-datasummary_skim(region2_selected,
type = "numeric",
by = 'season',
fun_numeric = list(
Unique = NUnique,
Mean = Mean,
SD = SD,
Min = Min,
Max = Max,
Histogram = function(x) NULL
),
output = "gt"
)
tab %>%
# column labels
tab_spanner(label = 'Region 1', columns = 1:4) %>%
tab_spanner(label = 'Region 2', columns = 5:8) %>%
modelplot(models, coef_omit = 'Interc') + facet_grid(~model)
tab<-modelsummary(
panels,
fmt = fmt_significant(2),
statistic = c("conf.int", "{std.error}", "{p.value}", "{stars}"),
coef_rename = c(
"pca_scores" = "Air temperature (C)",
"elevation" = "Elevation (amsl)",
"precipitation" = "Precipitation (mm)",
"elevation_bc" = "Elevation (Box-Cox)",
"precipitation_log" = "Precipitation (Log+1)"
),
shape = "cbind"
)
tab<-modelsummary(
panels,
fmt = fmt_significant(2),
statistic = c("conf.int", "{std.error}", "{p.value}", "{stars}"),
coef_rename = c(
"pca_scores" = "Air temperature (C)",
"elevation" = "Elevation (amsl)",
"precipitation" = "Precipitation (mm)",
"elevation_bc" = "Elevation (Box-Cox)",
"precipitation_log" = "Precipitation (Log+1)"
),
shape = "cbind",  output = "gt"
)
tab %>%
# column labels
tab_spanner(label = 'Region 1', columns = 1:4) %>%
tab_spanner(label = 'Region 2', columns = 5:8) %>%
region2<- region2 %>% rename("air_temperature"='pca_scores')
tab<-modelsummary(
panels,
fmt = fmt_significant(2),
statistic = c("conf.int", "{std.error}", "{p.value}", "{stars}"),
coef_rename = c(
"air_temperature" = "Air temperature (C)",
"elevation" = "Elevation (amsl)",
"precipitation" = "Precipitation (mm)",
"elevation_bc" = "Elevation (Box-Cox)",
"precipitation_log" = "Precipitation (Log+1)"
),
shape = "cbind",  output = "gt"
)
tab %>%
# column labels
tab_spanner(label = 'Region 1', columns = 1:4) %>%
tab_spanner(label = 'Region 2', columns = 5:8) %>%
region2<- region2 %>% rename("air_temperature"='pca_scores')
tab %>% tab_spanner(label = 'Region 1', columns = 1:4) %>%  tab_spanner(label = 'Region 2', columns = 5:8)
models<- list(
"(I)" = glm_gaussian1,
"(II)" = glm_gaussian1b,
"(III)" = glm_gaussian1_standardized,
"(IV)" = glm_gaussian1_transformed,"(I)" = glm_gaussian2,
"(II)" = glm_gaussian2b,
"(III)" = glm_gaussian2_standardized,
"(IV)" = glm_gaussian2_transformed)
tab<-modelsummary(
models,
fmt = fmt_significant(2),
statistic = c("conf.int", "{std.error}", "{p.value}", "{stars}"),
coef_rename = c(
"air_temperature" = "Air temperature (C)",
"elevation" = "Elevation (amsl)",
"precipitation" = "Precipitation (mm)",
"elevation_bc" = "Elevation (Box-Cox)",
"precipitation_log" = "Precipitation (Log+1)"
),  output = "gt"
)
tab %>% tab_spanner(label = 'Region 1', columns = 1:4) %>%  tab_spanner(label = 'Region 2', columns = 5:8)
tab %>% tab_spanner(label = 'Region 1', columns = 1:5) %>%  tab_spanner(label = 'Region 2', columns = 6:8)
tab %>% tab_spanner(label = 'Region 1', columns = 2:5) %>%  tab_spanner(label = 'Region 2', columns = 6:8)
tab %>% tab_spanner(label = 'Region 1', columns = 2:5) %>%  tab_spanner(label = 'Region 2', columns = 6:9)
tab<-modelsummary(
models,
fmt = fmt_significant(2),
statistic = c("conf.int", "{std.error}", "{p.value}", "{stars}"),
stars = TRUE,
coef_rename = c(
"air_temperature" = "Air temperature (C)",
"elevation" = "Elevation (amsl)",
"precipitation" = "Precipitation (mm)",
"elevation_bc" = "Elevation (Box-Cox)",
"precipitation_log" = "Precipitation (Log+1)"
),  output = "gt"
)
tab %>% tab_spanner(label = 'Region 1', columns = 2:5) %>%  tab_spanner(label = 'Region 2', columns = 6:9)
tab<-modelsummary(
models,
fmt = fmt_significant(2),
statistic = c("conf.int", "{std.error}", "{p.value}"),
stars = TRUE,
coef_rename = c(
"air_temperature" = "Air temperature (C)",
"elevation" = "Elevation (amsl)",
"precipitation" = "Precipitation (mm)",
"elevation_bc" = "Elevation (Box-Cox)",
"precipitation_log" = "Precipitation (Log+1)"
),  output = "gt"
)
tab %>% tab_spanner(label = 'Region 1', columns = 2:5) %>%  tab_spanner(label = 'Region 2', columns = 6:9)
tab<-modelsummary(
models,
fmt = fmt_significant(2),
statistic = c("conf.int", "{std.error}", "{p.value}"),
stars = TRUE,
coef_rename = c(
"pca_scores" = "Air temperature (C)",
"elevation" = "Elevation (amsl)",
"precipitation" = "Precipitation (mm)",
"elevation_bc" = "Elevation (Box-Cox)",
"precipitation_log" = "Precipitation (Log+1)"
),  output = "gt"
)
tab %>% tab_spanner(label = 'Region 1', columns = 2:5) %>%  tab_spanner(label = 'Region 2', columns = 6:9)
tab<-modelsummary(
models,
fmt = fmt_significant(2),
statistic = c("{std.error}"),
stars = TRUE,
coef_rename = c(
"pca_scores" = "Air temperature (C)",
"elevation" = "Elevation (amsl)",
"precipitation" = "Precipitation (mm)",
"elevation_bc" = "Elevation (Box-Cox)",
"precipitation_log" = "Precipitation (Log+1)"
),  output = "gt", gof_map = c("aic", "bic")
)
tab %>% tab_spanner(label = 'Region 1', columns = 2:5) %>%  tab_spanner(label = 'Region 2', columns = 6:9)
summary(glm_gaussian1_standardized)
predicciones <- predict(glm_gaussian1_standardized, type = "response")
# Crear un dataframe con las predicciones y las variables predictoras relevantes
datos_prediccion <- data.frame(
predicciones = predicciones,
pca_scores = region1_combined$pca_scores,
elevacion = region1_combined$elevacion,
precipitacion = region1_combined$precipitacion
)
View(region1_combined)
predicciones <- predict(glm_gaussian1_standardized, type = "response")
# Crear un dataframe con las predicciones y las variables predictoras relevantes
datos_prediccion <- data.frame(
predicciones = predicciones,
pca_scores = region1_combined$pca_scores,
elevacion = region1_combined$elevacion,
precipitacion = region1_combined$precipitacion
)
datos_prediccion <- data.frame(
+     predicciones = predicciones,
predicciones <- predict(glm_gaussian1_standardized, type = "response")
datos_prediccion <- data.frame(
+     predicciones = predicciones,
datos_prediccion <- data.frame(
predicciones = predicciones,
pca_scores = region1_combined$pca_scores,
elevacion = region1_combined$elevacion,
precipitacion = region1_combined$precipitacion
)
predicciones
predicciones<-as.dataframe(predicciones)
predicciones<-dataframe(predicciones)
datos_combinados <- bind_cols(
predicciones = predicciones,
pca_scores = region1_combined$pca_scores,
elevacion = region1_combined$elevacion,
precipitacion = region1_combined$precipitacion
)
View(datos_combinados)
datos_combinados <- bind_cols(
predicciones = predicciones,
pca_scores = region1_combined$pca_scores,
elevacion = region1_combined$elevacion,
precipitacion = region1_combined$precipitacion
)
datos_prediccion<-data.frame(
predicciones = datos_combinados$predicciones,
pca_scores = region1_combined$pca_scores,
elevacion = region1_combined$elevacion,
precipitacion = region1_combined$precipitacion
)
datos_prediccion<-data.frame(
elevacion = region1_combined$elevacion,
precipitacion = region1_combined$precipitacion
)
datos_combinados<- cbind
datos_combinados<- cbind
datos_combinados <- bind_cols(
predicciones = predicciones,
pca_scores = region1_combined$pca_scores,
elevacion = region1_combined$elevacion,
precipitacion = region1_combined$precipitacion
)
datos_prediccion<-data.frame(
elevacion = region1_combined$elevacion,
precipitacion = region1_combined$precipitacion
)
datos_combinados<- bind_cols(datos_combinados, datos_prediccion)
datos_combinados<- merge(datos_combinados, datos_prediccion)
View(datos_combinados)
datos_prediccion<-data.frame(
elevacion = region1_combined$elevacion,
precipitacion = region1_combined$precipitacion
)
datos_combinados<- merge(datos_combinados, datos_prediccion)
datos_combinados <- bind_cols(
predicciones = predicciones,
pca_scores = region1_combined$pca_scores,
elevacion = region1_combined$elevacion,
precipitacion = region1_combined$precipitacion
)
datos_combinados<- merge(datos_combinados, datos_prediccion)
datos_combinados<- bind_cols(datos_combinados, datos_prediccion)
datos_combinados <- bind_cols(
predicciones = predicciones,
pca_scores = region1_combined$pca_scores,
elevacion = region1_combined$elevacion,
precipitacion = region1_combined$precipitacion
)
View(datos_combinados)
ggplot(datos_prediccion, aes(x = pca_scores, y = predicciones)) +
geom_point() +
labs(x = "pca_scores", y = "Predicciones del modelo") +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal()
ggplot(datos_combinados, aes(x = pca_scores, y = predicciones)) +
geom_point() +
labs(x = "pca_scores", y = "Predicciones del modelo") +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal()
ggplot(datos_combinados, aes(x = pca_scores, y = predicciones)) +
geom_point() +
labs(x = "air temperature", y = "predictions") +
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
View(region1_selected)
ggplot(region1_selected, aes(x = air_temperature, y = high_freq_hz)) + geom_point() +
+     labs(x = "air temperature", y = "predictions") +
+     geom_smooth(method = "lm", se = TRUE) +
+     theme_minimal()
ggplot(region1_selected, aes(x = air_temperature, y = high_freq_hz) + geom_point() +
+     labs(x = "air temperature", y = "predictions") +
+     geom_smooth(method = "lm", se = TRUE) +
+     theme_minimal())
ggplot(region1_selected, aes(x = air_temperature, y = high_freq_hz)) + geom_point() +
+     labs(x = "air temperature", y = "predictions") +
+     geom_smooth(method = "lm", se = TRUE) +
+     theme_minimal())
ggplot(region1_selected, aes(x = air_temperature, y = high_freq_hz)) + geom_point() +
+     labs(x = "air temperature", y = "predictions") +
+     geom_smooth(method = "lm", se = TRUE) +
+     theme_minimal()
ggplot(region1_selected, aes(x = air_temperature, y = high_freq_hz)) +
geom_point() +
labs(x = "air temperature", y = "predictions") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
ggplot(region1_selected, aes(x = air_temperature, y = high_freq_hz)) +
geom_point() +
labs(x = "precipitation", y = "high_freq_hz") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
ggplot(region1_selected, aes(x = precipitation, y = high_freq_hz)) +
geom_point() +
labs(x = "precipitation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
ggplot(region1_selected, aes(x = elevation, y = high_freq_hz)) +
geom_point() +
labs(x = "precipitation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
ggplot(region1_selected, aes(x = elevation, y = high_freq_hz)) +
geom_point() +
labs(x = "elevation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
a<-ggplot(region1_selected, aes(x = air_temperature, y = high_freq_hz)) +
geom_point() +
labs(x = "air temperature", y = "predictions") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
b<-ggplot(region1_selected, aes(x = precipitation, y = high_freq_hz)) +
geom_point() +
labs(x = "precipitation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
c<-ggplot(region1_selected, aes(x = elevation, y = high_freq_hz)) +
geom_point() +
labs(x = "elevation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
d<-ggplot(region2_selected, aes(x = air_temperature, y = high_freq_hz)) +
geom_point() +
labs(x = "air temperature", y = "predictions") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
e<-ggplot(region2_selected, aes(x = precipitation, y = high_freq_hz)) +
geom_point() +
labs(x = "precipitation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
f<-ggplot(region2_selected, aes(x = elevation, y = high_freq_hz)) +
geom_point() +
labs(x = "elevation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
plot_grid(a,b,c,d,e,f nrow = 2, ncol = 3)
plot_grid(a,b,c,d,e,f nrow = 2)
plot_grid(a,b,c,d,e,f, nrow = 2)
d<-ggplot(region2_selected, aes(x = air_temperature, y = high_freq_hz)) +
geom_point() +
labs(x = "air temperature", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
a<-ggplot(region1_selected, aes(x = air_temperature, y = high_freq_hz)) +
geom_point() +
labs(x = "air temperature", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
plot_grid(a,b,c,d,e,f, nrow = 2)
b<-ggplot(region1_selected, aes(x = precipitation, y = high_freq_hz)) +
geom_point() +
labs(x = "precipitation") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
c<-ggplot(region1_selected, aes(x = elevation, y = high_freq_hz)) +
geom_point() +
labs(x = "elevation") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
e<-ggplot(region2_selected, aes(x = precipitation, y = high_freq_hz)) +
geom_point() +
labs(x = "precipitation") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
f<-ggplot(region2_selected, aes(x = elevation, y = high_freq_hz)) +
geom_point() +
labs(x = "elevation") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
plot_grid(a,b,c,d,e,f, nrow = 2)
b<-ggplot(region1_selected, aes(x = precipitation, y = high_freq_hz)) +
geom_point() +
labs(x = "precipitation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
c<-ggplot(region1_selected, aes(x = elevation, y = high_freq_hz)) +
geom_point() +
labs(x = "elevation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
e<-ggplot(region2_selected, aes(x = precipitation, y = high_freq_hz)) +
geom_point() +
labs(x = "precipitation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
f<-ggplot(region2_selected, aes(x = elevation, y = high_freq_hz)) +
geom_point() +
labs(x = "elevation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
plot_grid(a,b,c,d,e,f, nrow = 2)
e <- e + labs(y = NULL)  # Eliminar etiqueta del eje y en el gráfico e
f <- f + labs(y = NULL)
b <- b + labs(y = NULL)  # Eliminar etiqueta del eje y en el gráfico e
c <- c + labs(y = NULL)
plot_grid(a, b, c, d, e, f, nrow = 2, align = "v", axis = "tb")
a <- a + ggtitle("Region 1")
b<- b + ggtitle("Region 2")
plot_grid(a, b, c, d, e, f, nrow = 2, align = "v", axis = "tb")
b<- b + labs(y = NULL)
d<- d + ggtitle("Region 2")
plot_grid(a, b, c, d, e, f, nrow = 2, align = "v", axis = "tb")
b<- b + ggtitle(Null)
b<- b + ggtitle()
b<- b + ggtitle("")
plot_grid(a, b, c, d, e, f, nrow = 2, align = "v", axis = "tb")
a<-plot_grid(a, b, c, align = "v", axis = "tb") + ggtitle('Region1')
b<-plot_grid(d, e, f, align = "v", axis = "tb") + ggtitle('Region2')
plot_grid(a, b, nrow= 2, align = "v", axis = "tb")
a<-ggplot(region1_selected, aes(x = air_temperature, y = high_freq_hz)) +
geom_point() +
labs(x = "air temperature", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
d<-ggplot(region2_selected, aes(x = air_temperature, y = high_freq_hz)) +
geom_point() +
labs(x = "air temperature", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
a<-plot_grid(a, b, c, nrow=1, align = "v", axis = "tb") + ggtitle('Region1')
a<-ggplot(region1_selected, aes(x = air_temperature, y = high_freq_hz)) +
geom_point() +
labs(x = "air temperature", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
a<-plot_grid(a, b, c,nrow=1 align = "v", axis = "tb") + ggtitle('Region1')
a<-plot_grid(a, b, c,nrow=1, align = "v", axis = "tb") + ggtitle('Region1')
print(a)
b<-ggplot(region1_selected, aes(x = precipitation, y = high_freq_hz)) +
geom_point() +
labs(x = "precipitation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
a<-ggplot(region1_selected, aes(x = air_temperature, y = high_freq_hz)) +
geom_point() +
labs(x = "air temperature", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
a<-plot_grid(a, b, c,nrow=1, align = "v", axis = "tb") + ggtitle('Region1')
b<-plot_grid(d, e, f, nrow=1, align = "v", axis = "tb") + ggtitle('Region2')
plot_grid(a, b, nrow= 2, align = "v", axis = "tb")
b<-ggplot(region1_selected, aes(x = precipitation, y = high_freq_hz)) +
geom_point() +
labs(x = "precipitation", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
b<- b + labs(y = NULL)
a<-plot_grid(a, b, c,nrow=1, align = "v", axis = "tb") + ggtitle('Region1')
a<-ggplot(region1_selected, aes(x = air_temperature, y = high_freq_hz)) +
geom_point() +
labs(x = "air temperature", y = "high freq (hz)") +  # Aquí estaba el + adicional
geom_smooth(method = "lm", se = TRUE) +
theme_minimal()
a<-plot_grid(a, b, c,nrow=1, align = "v", axis = "tb") + ggtitle('Region1')
b<-plot_grid(d, e, f, nrow=1, align = "v", axis = "tb") + ggtitle('Region2')
plot_grid(a, b, nrow= 2, align = "v", axis = "tb")
print(A)
print(a)
